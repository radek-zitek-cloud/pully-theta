# =============================================================================
# AUTHENTICATION SERVICE ENVIRONMENT CONFIGURATION
# =============================================================================
# Copy this file to .env and customize for your environment
# Never commit .env files containing real secrets to version control
# =============================================================================

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Application build information
# VERSION: Application version for build and runtime identification
VERSION=1.0.0

# BUILD_TIME: Build timestamp for version tracking and debugging
BUILD_TIME=2025-06-20T16:00:00Z

# Server listening configuration
# PORT: The port number the server will listen on (default: 6910)
PORT=6910

# HOST: The host address to bind the server to (default: localhost)
# Use 0.0.0.0 for production to accept connections from all interfaces
HOST=localhost

# ENVIRONMENT: The deployment environment (development, staging, production)
# This affects logging level, error verbosity, and other behaviors
ENVIRONMENT=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# PostgreSQL connection settings
DB_HOST=localhost
DB_PORT=5432
DB_NAME=auth_service
DB_USER=postgres
DB_PASSWORD=postgres

# SSL mode for database connection
# Options: disable, require, verify-ca, verify-full
# Use 'require' or higher for production environments
DB_SSL_MODE=disable

# Connection pool settings for optimal performance
# MAX_CONNECTIONS: Maximum number of open connections to the database
DB_MAX_CONNECTIONS=25

# MAX_IDLE_CONNECTIONS: Maximum number of idle connections in the pool
DB_MAX_IDLE_CONNECTIONS=5

# CONNECTION_MAX_LIFETIME: Maximum time a connection can be reused
# Format: duration string (e.g., "5m", "1h", "30s")
DB_CONNECTION_MAX_LIFETIME=5m

# =============================================================================
# JWT (JSON Web Token) CONFIGURATION
# =============================================================================

# JWT_SECRET: Secret key for signing JWT tokens
# SECURITY: Must be at least 32 characters long for production
# IMPORTANT: Generate a strong, unique secret for each environment
JWT_SECRET=your-super-secret-jwt-key-at-least-32-characters-long-for-security

# JWT_ACCESS_TOKEN_DURATION: Lifetime of access tokens
# Format: duration string (e.g., "15m", "1h", "30s")
# Recommendation: Keep short (15-30 minutes) for security
JWT_ACCESS_TOKEN_DURATION=15m

# JWT_REFRESH_TOKEN_DURATION: Lifetime of refresh tokens
# Format: duration string (e.g., "168h" for 7 days)
# Recommendation: 7-30 days depending on security requirements
JWT_REFRESH_TOKEN_DURATION=168h

# =============================================================================
# PASSWORD SECURITY CONFIGURATION
# =============================================================================

# PASSWORD_BCRYPT_COST: Cost factor for bcrypt hashing
# Range: 4-31 (higher = more secure but slower)
# Recommendation: 12 for production (good balance of security and performance)
PASSWORD_BCRYPT_COST=12

# PASSWORD_MIN_LENGTH: Minimum password length requirement
# Recommendation: 8 characters minimum
PASSWORD_MIN_LENGTH=8

# =============================================================================
# RATE LIMITING CONFIGURATION
# =============================================================================

# RATE_LIMIT_ENABLED: Enable/disable rate limiting globally
RATE_LIMIT_ENABLED=true

# RATE_LIMIT_REQUESTS: Maximum number of requests per time window
RATE_LIMIT_REQUESTS=100

# RATE_LIMIT_DURATION: Time window for rate limiting
# Format: duration string (e.g., "1m", "1h")
RATE_LIMIT_DURATION=1m

# =============================================================================
# EMAIL CONFIGURATION (for password reset functionality)
# =============================================================================

# SMTP server configuration
# Common SMTP providers:
# - Gmail: smtp.gmail.com:587
# - Outlook: smtp-mail.outlook.com:587
# - SendGrid: smtp.sendgrid.net:587
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587

# SMTP authentication credentials
# For Gmail: Use App Password, not your regular password
# For other providers: Use your SMTP credentials
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# Email sender configuration
EMAIL_FROM=noreply@yourapp.com

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# LOG_LEVEL: Minimum log level to output
# Options: debug, info, warn, error, fatal, panic
# Recommendation: info for production, debug for development
LOG_LEVEL=info

# LOG_FORMAT: Log output format
# Options: json, text
# Recommendation: json for production (better for log aggregation)
LOG_FORMAT=json

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# CORS_ALLOWED_ORIGINS: Comma-separated list of allowed origins for CORS
# Examples: 
# - Development: http://localhost:3000,http://localhost:3001
# - Production: https://yourapp.com,https://www.yourapp.com
CORS_ALLOWED_ORIGINS=http://localhost:3000

# CORS_ALLOWED_METHODS: HTTP methods allowed for CORS requests
CORS_ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS

# CORS_ALLOWED_HEADERS: Headers allowed for CORS requests
CORS_ALLOWED_HEADERS=Origin,Content-Type,Accept,Authorization,X-Requested-With

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# METRICS_ENABLED: Enable Prometheus metrics endpoint
METRICS_ENABLED=true

# METRICS_PATH: Path for metrics endpoint
METRICS_PATH=/metrics

# HEALTH_CHECK_TIMEOUT: Timeout for health check operations
# Format: duration string (e.g., "5s", "10s")
HEALTH_CHECK_TIMEOUT=5s

# =============================================================================
# DEVELOPMENT SPECIFIC SETTINGS
# =============================================================================

# GIN_MODE: Gin framework mode
# Options: debug, test, release
# Recommendation: release for production
GIN_MODE=debug

# HOT_RELOAD_ENABLED: Enable hot reload for development
# Only used in development mode
HOT_RELOAD_ENABLED=true
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Health Check Configuration
HEALTH_CHECK_INTERVAL=30s

# Security Configuration
TRUSTED_PROXIES=127.0.0.1,::1
